{"ast":null,"code":"var _jsxFileName = \"/home/kaustav/Documents/webdev/react/moview/src/Components/ListPage/ListHolder.js\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react'; // import React, { Component } from 'react';\n\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListHolder(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this);\n}\n/* class ListHolder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { searchData: [], dataReady: false};\n    }\n\n    async hitAPIForSearch(query = \"\") {\n        console.log(\"Hello\");\n        // const response = await axios.get(this.props.apiURL);\n        const response = await axios.get(`${this.props.apiURL}?s=${query}&apikey=${this.props.apiKey}`);\n        this.setState({ searchData: response.data.Search, dataReady: true});\n    }\n\n    componentDidMount() {\n        this.hitAPIForSearch();\n    }\n\n    renderListItems() {\n        if(!this.state.dataReady) {\n            return (<h1>Loading...</h1>);\n        } else if(this.state.searchData === undefined) {\n            return;\n        } else {\n            \n            // return <h1>{searchData[0].Title}</h1>\n            this.searchData.map(item => {\n                console.log(item);\n                // return <Tile key={item.imdbID} imgSrc={item.Poster} name={item.Title} id={item.imdbID} />\n                return <h1>Hi</h1>\n            });\n        }\n    }\n\n    render() {\n        this.props.searchFunction(this.hitAPIForSearch);\n        return (<div>\n            <h1>List of Items</h1>\n            {this.renderListItems()}\n        </div>);\n    }\n} */\n\n\n_c = ListHolder;\nexport default ListHolder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListHolder\");","map":{"version":3,"sources":["/home/kaustav/Documents/webdev/react/moview/src/Components/ListPage/ListHolder.js"],"names":["axios","React","useEffect","useState","Tile","ListHolder","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAGvB,sBAAQ;AAAA,4BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAEJ,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAIH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAjDSD,U;AAmDT,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n// import React, { Component } from 'react';\nimport Tile from './Tile';\n\nfunction ListHolder(props) {\n    \n\n    return (<div>\n        <h1>List of Items</h1>\n        <Tile />\n    </div>);\n}\n\n/* class ListHolder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { searchData: [], dataReady: false};\n    }\n\n    async hitAPIForSearch(query = \"\") {\n        console.log(\"Hello\");\n        // const response = await axios.get(this.props.apiURL);\n        const response = await axios.get(`${this.props.apiURL}?s=${query}&apikey=${this.props.apiKey}`);\n        this.setState({ searchData: response.data.Search, dataReady: true});\n    }\n\n    componentDidMount() {\n        this.hitAPIForSearch();\n    }\n\n    renderListItems() {\n        if(!this.state.dataReady) {\n            return (<h1>Loading...</h1>);\n        } else if(this.state.searchData === undefined) {\n            return;\n        } else {\n            \n            // return <h1>{searchData[0].Title}</h1>\n            this.searchData.map(item => {\n                console.log(item);\n                // return <Tile key={item.imdbID} imgSrc={item.Poster} name={item.Title} id={item.imdbID} />\n                return <h1>Hi</h1>\n            });\n        }\n    }\n\n    render() {\n        this.props.searchFunction(this.hitAPIForSearch);\n        return (<div>\n            <h1>List of Items</h1>\n            {this.renderListItems()}\n        </div>);\n    }\n} */\n\nexport default ListHolder;"]},"metadata":{},"sourceType":"module"}