{"ast":null,"code":"var _jsxFileName = \"/home/kaustav/Documents/webdev/react/moview/src/Components/ListPage/ListHolder.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListHolder(props) {\n  _s();\n\n  const [searchData, setSearchData] = useState([]);\n  const [dataReady, setDataReady] = useState(false);\n\n  async function hitAPIForSearch() {\n    const response = await axios.get(props.apiURL);\n    setSearchData(response.data.Search);\n\n    if (searchData !== undefined) {\n      setDataReady(true);\n      console.log(\"Hello \" + searchData);\n    } // console.log(response.data.Search);\n\n  }\n\n  useEffect(() => hitAPIForSearch());\n\n  function renderListItems() {\n    if (!dataReady) {\n      console.log(\"Hi \" + searchData);\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this);\n    } else {\n      searchData.map(item => {\n        return /*#__PURE__*/_jsxDEV(Tile, {\n          imgSrc: item.Poster,\n          name: item.Title,\n          id: item.imdbID\n        }, item.imdbID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderListItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ListHolder, \"Mzl+ltFa6dn3YWXoUvxrv3DT1EM=\");\n\n_c = ListHolder;\nexport default ListHolder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListHolder\");","map":{"version":3,"sources":["/home/kaustav/Documents/webdev/react/moview/src/Components/ListPage/ListHolder.js"],"names":["axios","React","useEffect","useState","Tile","ListHolder","props","searchData","setSearchData","dataReady","setDataReady","hitAPIForSearch","response","get","apiURL","data","Search","undefined","console","log","renderListItems","map","item","Poster","Title","imdbID"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;;AAEA,iBAAeQ,eAAf,GAAiC;AAC7B,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUP,KAAK,CAACQ,MAAhB,CAAvB;AACAN,IAAAA,aAAa,CAACI,QAAQ,CAACG,IAAT,CAAcC,MAAf,CAAb;;AACA,QAAGT,UAAU,KAAKU,SAAlB,EAA6B;AACzBP,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWZ,UAAvB;AACH,KAN4B,CAO7B;;AACH;;AAEDL,EAAAA,SAAS,CAAC,MAAMS,eAAe,EAAtB,CAAT;;AAEA,WAASS,eAAT,GAA2B;AACvB,QAAG,CAACX,SAAJ,EAAe;AACXS,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQZ,UAApB;AACA,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAHD,MAGO;AACHA,MAAAA,UAAU,CAACc,GAAX,CAAeC,IAAI,IAAI;AACnB,4BAAO,QAAC,IAAD;AAAwB,UAAA,MAAM,EAAEA,IAAI,CAACC,MAArC;AAA6C,UAAA,IAAI,EAAED,IAAI,CAACE,KAAxD;AAA+D,UAAA,EAAE,EAAEF,IAAI,CAACG;AAAxE,WAAWH,IAAI,CAACG,MAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD;AAGH;AACJ;;AAED,sBAAQ;AAAA,cAEHL,eAAe;AAFZ;AAAA;AAAA;AAAA;AAAA,UAAR;AAIH;;GA/BQf,U;;KAAAA,U;AAiCT,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Tile from './Tile';\n\nfunction ListHolder(props) {\n    const [searchData, setSearchData] = useState([]);\n    const [dataReady, setDataReady] = useState(false);\n\n    async function hitAPIForSearch() {\n        const response = await axios.get(props.apiURL);\n        setSearchData(response.data.Search);\n        if(searchData !== undefined) {\n            setDataReady(true);\n            console.log(\"Hello \" + searchData);\n        }\n        // console.log(response.data.Search);\n    }\n\n    useEffect(() => hitAPIForSearch());\n\n    function renderListItems() {\n        if(!dataReady) {\n            console.log(\"Hi \" + searchData);\n            return (<h1>Loading...</h1>);\n        } else {\n            searchData.map(item => {\n                return <Tile key={item.imdbID} imgSrc={item.Poster} name={item.Title} id={item.imdbID} />\n            });\n        }\n    }\n\n    return (<div>\n\n        {renderListItems()}\n    </div>);\n}\n\nexport default ListHolder;"]},"metadata":{},"sourceType":"module"}