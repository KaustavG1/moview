{"ast":null,"code":"var _jsxFileName = \"/home/kaustav/Documents/webdev/react/moview/src/Components/ListPage/ListHolder.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListHolder(props) {\n  _s();\n\n  const [searchData, setSearchData] = useState([]);\n  const [dataReady, setDataReady] = useState(false);\n\n  async function hitAPIForSearch(query = \"\") {\n    if (query !== \"\") {\n      console.log(\"Hi\");\n      const response = await axios.get(`${props.apiURL}?s=${query}&apikey=${props.apiKey}`);\n      setSearchData(response.data);\n      setDataReady(true);\n    }\n  }\n\n  useEffect(() => hitAPIForSearch(props.searchTerm), [props.searchTerm]);\n\n  function renderTile() {\n    if (!dataReady) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n    } else {\n      return searchData.map(item => {\n        return /*#__PURE__*/_jsxDEV(Tile, {\n          imgSrc: searchData.Poster,\n          alt: searchData.Title,\n          name: searchData.Title,\n          id: searchData.imdbID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 24\n        }, this);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), renderTile()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ListHolder, \"Mzl+ltFa6dn3YWXoUvxrv3DT1EM=\");\n\n_c = ListHolder;\nexport default ListHolder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListHolder\");","map":{"version":3,"sources":["/home/kaustav/Documents/webdev/react/moview/src/Components/ListPage/ListHolder.js"],"names":["axios","React","useEffect","useState","Tile","ListHolder","props","searchData","setSearchData","dataReady","setDataReady","hitAPIForSearch","query","console","log","response","get","apiURL","apiKey","data","searchTerm","renderTile","map","item","Poster","Title","imdbID"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;;AAEA,iBAAeQ,eAAf,CAA+BC,KAAK,GAAG,EAAvC,EAA2C;AACvC,QAAGA,KAAK,KAAK,EAAb,EAAiB;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,YAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,GAAEV,KAAK,CAACW,MAAO,MAAKL,KAAM,WAAUN,KAAK,CAACY,MAAO,EAA5D,CAAvB;AACAV,MAAAA,aAAa,CAACO,QAAQ,CAACI,IAAV,CAAb;AACAT,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ;;AAEDR,EAAAA,SAAS,CAAC,MAAMS,eAAe,CAACL,KAAK,CAACc,UAAP,CAAtB,EAA0C,CAACd,KAAK,CAACc,UAAP,CAA1C,CAAT;;AAEA,WAASC,UAAT,GAAsB;AAClB,QAAG,CAACZ,SAAJ,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,aAAOF,UAAU,CAACe,GAAX,CAAeC,IAAI,IAAI;AAC1B,4BAAO,QAAC,IAAD;AAAM,UAAA,MAAM,EAAEhB,UAAU,CAACiB,MAAzB;AAAiC,UAAA,GAAG,EAAEjB,UAAU,CAACkB,KAAjD;AAAwD,UAAA,IAAI,EAAElB,UAAU,CAACkB,KAAzE;AAAgF,UAAA,EAAE,EAAElB,UAAU,CAACmB;AAA/F;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFM,CAAP;AAGH;AACJ;;AAED,sBAAQ;AAAA,4BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,EAMHL,UAAU,EANP;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAQH;;GAjCQhB,U;;KAAAA,U;AAmCT,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Tile from './Tile';\n\nfunction ListHolder(props) {\n    const [searchData, setSearchData] = useState([]);\n    const [dataReady, setDataReady] = useState(false);\n\n    async function hitAPIForSearch(query = \"\") {\n        if(query !== \"\") {\n            console.log(\"Hi\");\n            const response = await axios.get(`${props.apiURL}?s=${query}&apikey=${props.apiKey}`);\n            setSearchData(response.data);\n            setDataReady(true);\n        }\n    }\n\n    useEffect(() => hitAPIForSearch(props.searchTerm), [props.searchTerm]);\n\n    function renderTile() {\n        if(!dataReady) {\n            return <h1>Loading...</h1>\n        } else {\n            return searchData.map(item => {\n                return <Tile imgSrc={searchData.Poster} alt={searchData.Title} name={searchData.Title} id={searchData.imdbID} />\n            });\n        }\n    }\n\n    return (<div>\n        <h1>List of Items</h1>\n        {/* <Tile imgSrc={\"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\"} \n              alt={\"Iron Man\"}\n              name={\"Iron Man\"}\n              id={\"tt0371746\"} /> */}\n        {renderTile()}\n    </div>);\n}\n\nexport default ListHolder;"]},"metadata":{},"sourceType":"module"}